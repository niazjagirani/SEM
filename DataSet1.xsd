<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SEMDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SEMDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SEM.Properties.Settings.GlobalReference.Default.SEMDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegClassTableAdapter" GeneratorDataComponentClassName="RegClassTableAdapter" Name="RegClass" UserDataComponentName="RegClassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SEMDBConnectionString (Settings)" DbObjectName="SEMDB.dbo.RegClass" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RegClass] WHERE (([classID] = @Original_classID) AND ((@IsNull_stClass = 1 AND [stClass] IS NULL) OR ([stClass] = @Original_stClass)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_classID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_stClass" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stClass" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_stClass" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="stClass" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RegClass] ([stClass]) VALUES (@stClass);
SELECT classID, stClass FROM RegClass WHERE (classID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@stClass" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="stClass" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT classID, stClass FROM dbo.RegClass</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RegClass] SET [stClass] = @stClass WHERE (([classID] = @Original_classID) AND ((@IsNull_stClass = 1 AND [stClass] IS NULL) OR ([stClass] = @Original_stClass)));
SELECT classID, stClass FROM RegClass WHERE (classID = @classID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@stClass" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="stClass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_classID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="classID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_stClass" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stClass" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_stClass" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="stClass" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="classID" ColumnName="classID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@classID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="classID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="classID" DataSetColumn="classID" />
              <Mapping SourceColumn="stClass" DataSetColumn="stClass" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegFeesTypeTableAdapter" GeneratorDataComponentClassName="RegFeesTypeTableAdapter" Name="RegFeesType" UserDataComponentName="RegFeesTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SEMDBConnectionString (Settings)" DbObjectName="SEMDB.dbo.RegFeesType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [RegFeesType] ([ftName]) VALUES (@ftName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ftName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ftName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ftID, ftName
FROM            RegFeesType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ftID" DataSetColumn="ftID" />
              <Mapping SourceColumn="ftName" DataSetColumn="ftName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegSubjectNameTableAdapter" GeneratorDataComponentClassName="RegSubjectNameTableAdapter" Name="RegSubjectName" UserDataComponentName="RegSubjectNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SEMDBConnectionString (Settings)" DbObjectName="SEMDB.dbo.RegSubjectName" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [RegSubjectName] WHERE (([stid] = @Original_stid) AND ((@IsNull_Subject = 1 AND [Subject] IS NULL) OR ([Subject] = @Original_Subject)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Subject" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Subject" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Subject" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [RegSubjectName] ([Subject]) VALUES (@Subject);
SELECT stid, Subject FROM RegSubjectName WHERE (stid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Subject" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        stid, Subject
FROM            RegSubjectName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [RegSubjectName] SET [Subject] = @Subject WHERE (([stid] = @Original_stid) AND ((@IsNull_Subject = 1 AND [Subject] IS NULL) OR ([Subject] = @Original_Subject)));
SELECT stid, Subject FROM RegSubjectName WHERE (stid = @stid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Subject" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_stid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Subject" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Subject" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Subject" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="stid" ColumnName="stid" DataSourceName="SEMDB.dbo.RegSubjectName" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@stid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="stid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="stid" DataSetColumn="stid" />
              <Mapping SourceColumn="Subject" DataSetColumn="Subject" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegTeacherTableAdapter" GeneratorDataComponentClassName="RegTeacherTableAdapter" Name="RegTeacher" UserDataComponentName="RegTeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SEMDBConnectionString (Settings)" DbObjectName="SEMDB.dbo.RegTeacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [RegTeacher] WHERE (([tid] = @Original_tid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [RegTeacher] DEFAULT VALUES;
SELECT tid, tName + ' ' + tFName AS Teacher FROM RegTeacher WHERE (tid = SCOPE_IDENTITY())</CommandText>
                    <Parameters />
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        tid, tName + ' ' + tFName AS Teacher
FROM            RegTeacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="tid" DataSetColumn="tid" />
              <Mapping SourceColumn="Teacher" DataSetColumn="Teacher" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="RegClass" msprop:Generator_TableClassName="RegClassDataTable" msprop:Generator_TableVarName="tableRegClass" msprop:Generator_TablePropName="RegClass" msprop:Generator_RowDeletingName="RegClassRowDeleting" msprop:Generator_RowChangingName="RegClassRowChanging" msprop:Generator_RowEvHandlerName="RegClassRowChangeEventHandler" msprop:Generator_RowDeletedName="RegClassRowDeleted" msprop:Generator_UserTableName="RegClass" msprop:Generator_RowChangedName="RegClassRowChanged" msprop:Generator_RowEvArgName="RegClassRowChangeEvent" msprop:Generator_RowClassName="RegClassRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="classID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnclassID" msprop:Generator_ColumnPropNameInRow="classID" msprop:Generator_ColumnPropNameInTable="classIDColumn" msprop:Generator_UserColumnName="classID" type="xs:int" />
              <xs:element name="stClass" msprop:Generator_ColumnVarNameInTable="columnstClass" msprop:Generator_ColumnPropNameInRow="stClass" msprop:Generator_ColumnPropNameInTable="stClassColumn" msprop:Generator_UserColumnName="stClass" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RegFeesType" msprop:Generator_TableClassName="RegFeesTypeDataTable" msprop:Generator_TableVarName="tableRegFeesType" msprop:Generator_RowChangedName="RegFeesTypeRowChanged" msprop:Generator_TablePropName="RegFeesType" msprop:Generator_RowDeletingName="RegFeesTypeRowDeleting" msprop:Generator_RowChangingName="RegFeesTypeRowChanging" msprop:Generator_RowEvHandlerName="RegFeesTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="RegFeesTypeRowDeleted" msprop:Generator_RowClassName="RegFeesTypeRow" msprop:Generator_UserTableName="RegFeesType" msprop:Generator_RowEvArgName="RegFeesTypeRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ftID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnftID" msprop:Generator_ColumnPropNameInRow="ftID" msprop:Generator_ColumnPropNameInTable="ftIDColumn" msprop:Generator_UserColumnName="ftID" type="xs:int" />
              <xs:element name="ftName" msprop:Generator_ColumnVarNameInTable="columnftName" msprop:Generator_ColumnPropNameInRow="ftName" msprop:Generator_ColumnPropNameInTable="ftNameColumn" msprop:Generator_UserColumnName="ftName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RegSubjectName" msprop:Generator_TableClassName="RegSubjectNameDataTable" msprop:Generator_TableVarName="tableRegSubjectName" msprop:Generator_TablePropName="RegSubjectName" msprop:Generator_RowDeletingName="RegSubjectNameRowDeleting" msprop:Generator_RowChangingName="RegSubjectNameRowChanging" msprop:Generator_RowEvHandlerName="RegSubjectNameRowChangeEventHandler" msprop:Generator_RowDeletedName="RegSubjectNameRowDeleted" msprop:Generator_UserTableName="RegSubjectName" msprop:Generator_RowChangedName="RegSubjectNameRowChanged" msprop:Generator_RowEvArgName="RegSubjectNameRowChangeEvent" msprop:Generator_RowClassName="RegSubjectNameRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="stid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnstid" msprop:Generator_ColumnPropNameInRow="stid" msprop:Generator_ColumnPropNameInTable="stidColumn" msprop:Generator_UserColumnName="stid" type="xs:int" />
              <xs:element name="Subject" msprop:Generator_ColumnVarNameInTable="columnSubject" msprop:Generator_ColumnPropNameInRow="Subject" msprop:Generator_ColumnPropNameInTable="SubjectColumn" msprop:Generator_UserColumnName="Subject" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RegTeacher" msprop:Generator_TableClassName="RegTeacherDataTable" msprop:Generator_TableVarName="tableRegTeacher" msprop:Generator_RowChangedName="RegTeacherRowChanged" msprop:Generator_TablePropName="RegTeacher" msprop:Generator_RowDeletingName="RegTeacherRowDeleting" msprop:Generator_RowChangingName="RegTeacherRowChanging" msprop:Generator_RowEvHandlerName="RegTeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="RegTeacherRowDeleted" msprop:Generator_RowClassName="RegTeacherRow" msprop:Generator_UserTableName="RegTeacher" msprop:Generator_RowEvArgName="RegTeacherRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="tid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columntid" msprop:Generator_ColumnPropNameInRow="tid" msprop:Generator_ColumnPropNameInTable="tidColumn" msprop:Generator_UserColumnName="tid" type="xs:int" />
              <xs:element name="Teacher" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTeacher" msprop:Generator_ColumnPropNameInRow="Teacher" msprop:Generator_ColumnPropNameInTable="TeacherColumn" msprop:Generator_UserColumnName="Teacher" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="101" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RegClass" />
      <xs:field xpath="mstns:classID" />
    </xs:unique>
    <xs:unique name="RegSubjectName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RegSubjectName" />
      <xs:field xpath="mstns:stid" />
    </xs:unique>
    <xs:unique name="RegTeacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RegTeacher" />
      <xs:field xpath="mstns:tid" />
    </xs:unique>
  </xs:element>
</xs:schema>